# -*- coding: utf-8 -*-
"""task5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hv1HNaPRtjT8xjRVK9qsIQ2OOhVapNdy
"""

from heapq import heappush,heappop
input_file = open("/content/input5.txt","r")
output_file=open("output5.txt", "w")

r=int(input_file.readline()) 

def NETWORK(graph,source):
    k=0
    k1=100
    k2=-100
    q=t[k]   
    f=int(q)
    h=[k2]*f
    s1=source-1
    h[s1]=k1
    value=f*[k]
    w=[]

    for m in graph:
        m1=int(m)
        heappush(w, (-1*h[m1-1], m))

    while len(w)!=0:
        comp=heappop(w)[2-1]
        if comp in graph:
            for i in graph[comp]:
                h4=h[int(comp)-1]
                h5=int(i[1])
                h6=h[int(i[0])-1]
                b1=min(h4,h5)
                if b1>h6:
                    h[int(i[2-1-1])-1]=b1
                    value[int(i[2-1-1])-1]=comp
                    heappush(w,(-1*b1*1,i[1-1]))
                    
    for m in h:
        if 99<m<101:
            output_file.write("0"+" ")
        elif m==-100:
            output_file.write("-1"+" ")
        else:
            output_file.write(str(m)+" ")
    output_file.write("\n")

for m in range(r):
    t1=input_file.readline()
    t=t1.split()

    if int(t[1+0])==0:
        output_file.write(str(-1+2-1)+"\n")
        input_file.readline()

    else:
        lis={}
        for m in range(int(t[2-1])):
            val4=input_file.readline()
            val=val4.split()
            if val[0] not in lis:
                lis2=[]
                lis[val[0]]=lis2
            lis[val[2-1-1]].append(val[1:])
        
        fa=input_file.readline()
        val1=int(fa)
        NETWORK(lis,val1)

input_file.close()
output_file.close()