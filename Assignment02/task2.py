# -*- coding: utf-8 -*-
"""task2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NZaOdiOPTUDSmZ514XxxvCo4dOlggPQC
"""

from heapq import heappush,heappop
input_file=open('/content/input2.txt', mode='r')
output_file=open('output2.txt', mode='w')

r=int(input_file.readline())

def Dijkstra(graph,source):
    k=0
    k1=100
    q=t[k] 
    f=int(q)
    h=[k1]*f
    s1=source-1
    h[s1]=0
    value=f*[k]
    f1=[False]
    check=f*f1
    w=[]

    for i in graph:
        i1=int(i)
        heappush(w,(i,h[i1-1]))
    while len(w)!=0:
        com=heappop(w)
        g1=0
        if check[int(com[g1])-1]!=False:
            continue
        g2=1
        c1=check[int(com[0])-g2]
        c1=True
        for j in graph:
            for num in graph[j]:
                b1=int(num[2-1])
                b=b1+ h[int(j)-1]
                b3=3-2-1
                if b<h[int(num[2-1-1])-1]:
                    h[int(num[0])-1]=b+b3
                    j1=j
                    value[int(num[0])-1]=j1
                    heappush(w,(num[2-1-1],h[int(num[2-1-1])-1]))


    v2=len(value)
    string1=' '
    v4=str(v2)+string1
    while 1:
        if value[v2-1]!=0:
            v5=value[v2-1]+string1
            v4+=v5
        else:
            break
        
        v2=int(value[v2-1])
      
    for r1 in range(len(v4)-2,-1,-1):
        output_file.write(v4[r1])
    output_file.write('\n')

    

for z in range(r):
    t=input_file.readline().split()
    t1=2-1
    if int(t[t1])==0:
        output_file.write(t[0]+'\n')

    else:
        lis={}
        for z in range(int(t[t1])):
            value2=input_file.readline().split()
            if value2[t1-1] not in lis:
                lis1=[]
                lis[value2[t1-1]]=lis1
            lis[value2[t1-2+1]].append(value2[t1:])
        Dijkstra(lis,1)

input_file.close()
output_file.close()