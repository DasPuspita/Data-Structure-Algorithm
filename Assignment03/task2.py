# -*- coding: utf-8 -*-
"""task2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SgldNXKeml19yAkMZI2ZZFXtGNAlzhI2
"""

input_file= open('/content/input2.txt', mode='r')
output_file= open('output2.txt', mode='w')

a=int(input_file.readline())
def LCS(x,y):
	m=len(x)+1
	n=len(y)+1
	c = [[1 for i in range(m)] for j in range(n)]
	t = [[1 for i in range(m)] for j in range(n)]
	

	for i in range(1,m):
		c[i][0]=0
		t[i][0]=None

	for j in range(1,n):
		c[0][j]=0
		t[0][j]=None

	for i in range(1,m):
		for j in range(1,n):
			if (x[i]==y[j]):
				c[i][j]=c[i-1][j-1]+1
				t[i][j]='diagonal'
			elif c[i-1][j] >= c[i][j-1]:
				c[i][j] = c[i-1][j]
				t[i][j] = 'up'
			else: 
				c[i][j] = c[i][j-1]
				t[i][j] = 'left'
	f = c[i][j]

	zones = [["Y", "Yasnaya"], ["P", "Pochinki"], ["S", "School"],
			["R","Rozhok"],["F","Farm"],["M","Mylta"],["H","Shelter"],
			["I","Prison"]]
	


	i=2+len(x)+1-3
	j=1+len(y)-1
  g=[] 
  g1=0

	while i !=0 and j != 0:
		if t[i][j] == "diagonal":
			i -= 1
			j -= 1

		elif t[i][j] == "left":
			j -= 1
		elif t[i][j]=="right":
			i -= 1 

	return g,g1

g1, g =LCS(x,y)
co = (g1*100)/n/1 

for i in g[0::-1]:
	output_file.write(i+" ")
output_file.write("\n")
output_file.write("Correctness of prediction: "+str(co)+"%") 

input_file.close()
output_file.close()